


ARM Macro Assembler    Page 1 


    1 00000000         ; StringConversion.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on TM4C123
    5 00000000         ; ECE319K lab 7 number to string conversions
    6 00000000         ;
    7 00000000         ; Used in ECE319K Labs 7,8,9,10. You write these two fun
                       ctions
    8 00000000         
    9 00000000         
   10 00000000                 EXPORT           Dec2String
   11 00000000                 EXPORT           Fix2String
   12 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   13 00000000                 THUMB
   14 00000000                 PRESERVE8
   15 00000000         
   16 00000000         
   17 00000000         ;-----------------------Dec2String----------------------
                       -
   18 00000000         ; Convert a 32-bit number into unsigned decimal format
   19 00000000         ; String the string into the empty array add null-termin
                       ation
   20 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   21 00000000         ;        R1 pointer to empty array
   22 00000000         ; Output: none
   23 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   24 00000000 00000000 
                       saveR0  EQU              0
   25 00000000 00000004 
                       saveR1  EQU              4
   26 00000000         
   27 00000000         Dec2String
   28 00000000 B530            PUSH{R4,         R5, LR}
   29 00000002 F04F 34FF       MOV              R4, #-1     ; count
   30 00000006 B082            SUB              SP, #8
   31 00000008 9000            STR              R0, [SP, #saveR0]
   32 0000000A         Counter
   33 0000000A F04F 050A       MOV              R5, #10
   34 0000000E FBB0 F0F5       UDIV             R0, R0, R5
   35 00000012 F104 0401       ADD              R4, R4, #1
   36 00000016 2800            CMP              R0, #0
   37 00000018 D1F7            BNE              Counter
   38 0000001A 9800            LDR              R0, [SP, #saveR0]
   39 0000001C 4421            ADD              R1, R1, R4
   40 0000001E         loop
   41 0000001E 9000            STR              R0, [SP, #saveR0]
   42 00000020 9101            STR              R1, [SP, #saveR1]
   43 00000022 F04F 010A       MOV              R1, #10
   44 00000026 F000 F885       BL               Modulus
   45 0000002A 9901            LDR              R1, [SP, #saveR1]
   46 0000002C F100 0030       ADD              R0, #0x30
   47 00000030         
   48 00000030 7008            STRB             R0, [R1]
   49 00000032 F1A1 0101       SUB              R1, #0x01
   50 00000036 9800            LDR              R0, [SP, #saveR0]



ARM Macro Assembler    Page 2 


   51 00000038         
   52 00000038 F04F 050A       MOV              R5, #10
   53 0000003C FBB0 F0F5       UDIV             R0, R0, R5
   54 00000040 2800            CMP              R0, #0
   55 00000042 D000            BEQ              Dec2Done
   56 00000044 E7EB            B                loop
   57 00000046         Dec2Done
   58 00000046 F04F 0500       MOV              R5, #0      ; null-terminate
   59 0000004A 4421            ADD              R1, R1, R4
   60 0000004C F101 0102       ADD              R1, R1, #2
   61 00000050 700D            STRB             R5, [R1]
   62 00000052 B002            ADD              SP, #8
   63 00000054 E8BD 4030       POP{R4,          R5, LR}
   64 00000058         
   65 00000058 4770            BX               LR
   66 0000005A         ;* * * * * * * * End of Dec2String * * * * * * * *
   67 0000005A         
   68 0000005A         
   69 0000005A         ; -----------------------Fix2String---------------------
                       -
   70 0000005A         ; Create characters for LCD display in fixed-point forma
                       t
   71 0000005A         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   72 0000005A         ; Inputs:  R0 is an unsigned 32-bit number
   73 0000005A         ;          R1 pointer to empty array
   74 0000005A         ; Outputs: none
   75 0000005A         ; E.g., R0=0,    then create "0.000 "
   76 0000005A         ;       R0=3,    then create "0.003"
   77 0000005A         ;       R0=89,   then create "0.089"
   78 0000005A         ;       R0=123,  then create "0.123"
   79 0000005A         ;       R0=9999, then create "9.999"
   80 0000005A         ;       R0>9999, then create "*.***"
   81 0000005A         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   82 0000005A 00000000 
                       num1    EQU              0           ;MSB
   83 0000005A 00000004 
                       num2    EQU              4
   84 0000005A 00000008 
                       num3    EQU              8
   85 0000005A 0000000C 
                       num4    EQU              12          ;LSB
   86 0000005A 00000010 
                       savefR0 EQU              16
   87 0000005A 00000014 
                       savefR1 EQU              20
   88 0000005A         
   89 0000005A         
   90 0000005A         Fix2String
   91 0000005A B530            PUSH{R4,         R5, LR}
   92 0000005C B086            SUB              SP, #24
   93 0000005E         
   94 0000005E         ; Check if greater than 9999
   95 0000005E F242 730F       LDR              R3,= 9999
   96 00000062 4298            CMP              R0, R3
   97 00000064 D850            BHI              Asterick
   98 00000066         
   99 00000066 9004            STR              R0, [SP, #savefR0]



ARM Macro Assembler    Page 3 


  100 00000068 9105            STR              R1, [SP, #savefR1]
  101 0000006A F04F 010A       MOV              R1, #10
  102 0000006E F000 F861       BL               Modulus
  103 00000072 9905            LDR              R1, [SP, #savefR1]
  104 00000074 F100 0030       ADD              R0, #0x30
  105 00000078 9003            STR              R0, [SP, #num4]
  106 0000007A 9804            LDR              R0, [SP, #savefR0]
  107 0000007C F04F 050A       MOV              R5, #10
  108 00000080 FBB0 F0F5       UDIV             R0, R0, R5
  109 00000084         
  110 00000084 9004            STR              R0, [SP, #savefR0]
  111 00000086 9105            STR              R1, [SP, #savefR1]
  112 00000088 F04F 010A       MOV              R1, #10
  113 0000008C F000 F852       BL               Modulus
  114 00000090 9905            LDR              R1, [SP, #savefR1]
  115 00000092 F100 0030       ADD              R0, #0x30
  116 00000096 9002            STR              R0, [SP, #num3]
  117 00000098 9804            LDR              R0, [SP, #savefR0]
  118 0000009A F04F 050A       MOV              R5, #10
  119 0000009E FBB0 F0F5       UDIV             R0, R0, R5
  120 000000A2         
  121 000000A2 9004            STR              R0, [SP, #savefR0]
  122 000000A4 9105            STR              R1, [SP, #savefR1]
  123 000000A6 F04F 010A       MOV              R1, #10
  124 000000AA F000 F843       BL               Modulus
  125 000000AE 9905            LDR              R1, [SP, #savefR1]
  126 000000B0 F100 0030       ADD              R0, #0x30
  127 000000B4 9001            STR              R0, [SP, #num2]
  128 000000B6 9804            LDR              R0, [SP, #savefR0]
  129 000000B8 F04F 050A       MOV              R5, #10
  130 000000BC FBB0 F0F5       UDIV             R0, R0, R5
  131 000000C0         
  132 000000C0 9004            STR              R0, [SP, #savefR0]
  133 000000C2 9105            STR              R1, [SP, #savefR1]
  134 000000C4 F04F 010A       MOV              R1, #10
  135 000000C8 F000 F834       BL               Modulus
  136 000000CC 9905            LDR              R1, [SP, #savefR1]
  137 000000CE F100 0030       ADD              R0, #0x30
  138 000000D2 9000            STR              R0, [SP, #num1]
  139 000000D4 9804            LDR              R0, [SP, #savefR0]
  140 000000D6 F04F 050A       MOV              R5, #10
  141 000000DA FBB0 F0F5       UDIV             R0, R0, R5
  142 000000DE         
  143 000000DE         ArraySet
  144 000000DE 9B00            LDR              R3, [SP, #num1]
  145 000000E0 600B            STR              R3, [R1]
  146 000000E2 F04F 032E       MOV              R3, #0x2E
  147 000000E6 F8C1 3001       STR              R3, [R1, #1]
  148 000000EA 9B01            LDR              R3, [SP, #num2]
  149 000000EC F8C1 3002       STR              R3, [R1, #2]
  150 000000F0 9B02            LDR              R3, [SP, #num3]
  151 000000F2 F8C1 3003       STR              R3, [R1, #3]
  152 000000F6 9B03            LDR              R3, [SP, #num4]
  153 000000F8 604B            STR              R3, [R1, #4]
  154 000000FA         ; Add space character
  155 000000FA F04F 0320       MOV              R3, #0x20
  156 000000FE 714B            STRB             R3, [R1, #5]
  157 00000100         ;null terminate
  158 00000100 F04F 0300       MOV              R3, #0



ARM Macro Assembler    Page 4 


  159 00000104 718B            STRB             R3, [R1, #6]
  160 00000106 E011            B                FixDone
  161 00000108         
  162 00000108         ; If input number is greater than 9999
  163 00000108         Asterick
  164 00000108         ;Add asterisk 
  165 00000108 F04F 032A       MOV              R3, #0x2A
  166 0000010C 700B            STRB             R3, [R1]
  167 0000010E F04F 032E       MOV              R3, #0x2E
  168 00000112 704B            STRB             R3, [R1, #1]
  169 00000114 F04F 032A       MOV              R3, #0x2A
  170 00000118 708B            STRB             R3, [R1, #2]
  171 0000011A F04F 032A       MOV              R3, #0x2A
  172 0000011E 70CB            STRB             R3, [R1, #3]
  173 00000120 F04F 032A       MOV              R3, #0x2A
  174 00000124 710B            STRB             R3, [R1, #4]
  175 00000126 F04F 0300       MOV              R3, #0
  176 0000012A 714B            STRB             R3, [R1, #5]
  177 0000012C         FixDone
  178 0000012C B006            ADD              SP, #24
  179 0000012E E8BD 4030       POP{R4,          R5, LR}
  180 00000132         
  181 00000132 4770            BX               LR
  182 00000134         
  183 00000134         
  184 00000134         ; Inputs:  R0 is x
  185 00000134         ;          R1 is D
  186 00000134         ; Outputs: R0 is R
  187 00000134         Modulus
  188 00000134 B510            PUSH             {R4, LR}
  189 00000136 FBB0 F4F1       UDIV             R4, R0, R1
  190 0000013A FB04 F401       MUL              R4, R1
  191 0000013E EBA0 0004       SUB              R0, R0, R4
  192 00000142 E8BD 4010       POP              {R4, LR}
  193 00000146         
  194 00000146 4770            BX               LR
  195 00000148         
  196 00000148         
  197 00000148                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  198 00000148                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4 --fpu=
SoftVFP --depend=.\stringconversion.d -o.\stringconversion.o -I.\RTE\_Lab8 -IC:
\Users\aryaa\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Us
ers\aryaa\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --
predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 538" --predefine=
"_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --l
ist=.\stringconversion.lst ..\inc\StringConversion.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 12 in file ..\inc\StringConversion.s
   Uses
      None
Comment: .text unused
ArraySet 000000DE

Symbol: ArraySet
   Definitions
      At line 143 in file ..\inc\StringConversion.s
   Uses
      None
Comment: ArraySet unused
Asterick 00000108

Symbol: Asterick
   Definitions
      At line 163 in file ..\inc\StringConversion.s
   Uses
      At line 97 in file ..\inc\StringConversion.s
Comment: Asterick used once
Counter 0000000A

Symbol: Counter
   Definitions
      At line 32 in file ..\inc\StringConversion.s
   Uses
      At line 37 in file ..\inc\StringConversion.s
Comment: Counter used once
Dec2Done 00000046

Symbol: Dec2Done
   Definitions
      At line 57 in file ..\inc\StringConversion.s
   Uses
      At line 55 in file ..\inc\StringConversion.s
Comment: Dec2Done used once
Dec2String 00000000

Symbol: Dec2String
   Definitions
      At line 27 in file ..\inc\StringConversion.s
   Uses
      At line 10 in file ..\inc\StringConversion.s
Comment: Dec2String used once
Fix2String 0000005A

Symbol: Fix2String
   Definitions
      At line 90 in file ..\inc\StringConversion.s
   Uses
      At line 11 in file ..\inc\StringConversion.s
Comment: Fix2String used once
FixDone 0000012C

Symbol: FixDone



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 177 in file ..\inc\StringConversion.s
   Uses
      At line 160 in file ..\inc\StringConversion.s
Comment: FixDone used once
Modulus 00000134

Symbol: Modulus
   Definitions
      At line 187 in file ..\inc\StringConversion.s
   Uses
      At line 44 in file ..\inc\StringConversion.s
      At line 102 in file ..\inc\StringConversion.s
      At line 113 in file ..\inc\StringConversion.s
      At line 124 in file ..\inc\StringConversion.s
      At line 135 in file ..\inc\StringConversion.s

loop 0000001E

Symbol: loop
   Definitions
      At line 40 in file ..\inc\StringConversion.s
   Uses
      At line 56 in file ..\inc\StringConversion.s
Comment: loop used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

num1 00000000

Symbol: num1
   Definitions
      At line 82 in file ..\inc\StringConversion.s
   Uses
      At line 138 in file ..\inc\StringConversion.s
      At line 144 in file ..\inc\StringConversion.s

num2 00000004

Symbol: num2
   Definitions
      At line 83 in file ..\inc\StringConversion.s
   Uses
      At line 127 in file ..\inc\StringConversion.s
      At line 148 in file ..\inc\StringConversion.s

num3 00000008

Symbol: num3
   Definitions
      At line 84 in file ..\inc\StringConversion.s
   Uses
      At line 116 in file ..\inc\StringConversion.s
      At line 150 in file ..\inc\StringConversion.s

num4 0000000C

Symbol: num4
   Definitions
      At line 85 in file ..\inc\StringConversion.s
   Uses
      At line 105 in file ..\inc\StringConversion.s
      At line 152 in file ..\inc\StringConversion.s

saveR0 00000000

Symbol: saveR0
   Definitions
      At line 24 in file ..\inc\StringConversion.s
   Uses
      At line 31 in file ..\inc\StringConversion.s
      At line 38 in file ..\inc\StringConversion.s
      At line 41 in file ..\inc\StringConversion.s
      At line 50 in file ..\inc\StringConversion.s

saveR1 00000004

Symbol: saveR1
   Definitions
      At line 25 in file ..\inc\StringConversion.s
   Uses
      At line 42 in file ..\inc\StringConversion.s
      At line 45 in file ..\inc\StringConversion.s

savefR0 00000010

Symbol: savefR0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 86 in file ..\inc\StringConversion.s
   Uses
      At line 99 in file ..\inc\StringConversion.s
      At line 106 in file ..\inc\StringConversion.s
      At line 110 in file ..\inc\StringConversion.s
      At line 117 in file ..\inc\StringConversion.s
      At line 121 in file ..\inc\StringConversion.s
      At line 128 in file ..\inc\StringConversion.s
      At line 132 in file ..\inc\StringConversion.s
      At line 139 in file ..\inc\StringConversion.s

savefR1 00000014

Symbol: savefR1
   Definitions
      At line 87 in file ..\inc\StringConversion.s
   Uses
      At line 100 in file ..\inc\StringConversion.s
      At line 103 in file ..\inc\StringConversion.s
      At line 111 in file ..\inc\StringConversion.s
      At line 114 in file ..\inc\StringConversion.s
      At line 122 in file ..\inc\StringConversion.s
      At line 125 in file ..\inc\StringConversion.s
      At line 133 in file ..\inc\StringConversion.s
      At line 136 in file ..\inc\StringConversion.s

8 symbols
352 symbols in table
